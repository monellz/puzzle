dt = 0.1;

k1 = stencil {
  wk[0, 0, 0] = pk3[0, 0, 1] - pk3[0, 0, 0];
};

k2 = stencil {
  du[0, 0, 0] = ((dt / (wk[0, 0, 0] + wk[1, 0, 0])) *
                       (((gz[0, 0, 1] - gz[1, 0, 0]) * (pk3[1, 0, 1] - pk3[0, 0, 0])) +
                        ((gz[0, 0, 0] - gz[1, 0, 1]) * (pk3[0, 0, 1] - pk3[1, 0, 0]))));
};

k3 = stencil {
  uout[0, 0, 0] = (((uin[0, 0, 0] + du[0, 0, 0]) +
                          ((dt / (wk1[0, 0, 0] + wk1[1, 0, 0])) *
                           (((gz[0, 0, 1] - gz[1, 0, 0]) * (pp[1, 0, 1] - pp[0, 0, 0])) +
                            ((gz[0, 0, 0] - gz[1, 0, 1]) * (pp[0, 0, 1] - pp[1, 0, 0]))))) *
                         rdx[0, 0, 0]);
};

k4 = stencil {
  dv[0, 0, 0] = ((dt / (wk[0, 0, 0] + wk[0, 1, 0])) *
                       (((gz[0, 0, 1] - gz[0, 1, 0]) * (pk3[0, 1, 1] - pk3[0, 0, 0])) +
                        ((gz[0, 0, 0] - gz[0, 1, 1]) * (pk3[0, 0, 1] - pk3[0, 1, 0]))));
};

k5 = stencil {
  vout[0, 0, 0] = (((vin[0, 0, 0] + dv[0, 0, 0]) +
                          ((dt / (wk1[0, 0, 0] + wk1[0, 1, 0])) *
                           (((gz[0, 0, 1] - gz[0, 1, 0]) * (pp[0, 1, 1] - pp[0, 0, 0])) +
                            ((gz[0, 0, 0] - gz[0, 1, 1]) * (pp[0, 0, 1] - pp[0, 1, 0]))))) *
                         rdy[0, 0, 0]);
};

nh_p_grad = kernel<3> {
  In: pk3, gz, uin, rdx, vin, wk1, pp, rdy;
  Out: uout, vout;
  Pad: 4;
  Bound: [0, 0, 0] -> [64, 64, 64];
  // Iter: 1;
};
